{"version":3,"file":"static/js/122.801920ac.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}